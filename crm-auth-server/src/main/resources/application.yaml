server:
  port: 9001

spring:
  application:
    name: crm-auth-server

  config:
    import: file:secrets.properties

  datasource:
    username: myuser
    password: secret
    url: "jdbc:postgresql://127.0.0.1:5432/pinkkstore_db"

  sql:
    init:
      mode: always


  security:
    oauth2:
      authorizationserver:
        client:
          crm-client:
            registration:
              client-id: "crm-client"
              client-secret: "{noop}secret"
              client-authentication-methods:
                - "client_secret_basic"
              authorization-grant-types:
                - "authorization_code"
                - "refresh_token"
                - "client_credentials"
              redirect-uris:
                - "http://127.0.0.1:8081/login/oauth2/code/crm-client-oidc"
                - "http://127.0.0.1:8081/authorized"
              post-logout-redirect-uris:
                - "http://127.0.0.1:8081/logged-out"
              scopes:
                - "openid"
                - "profile"
            require-authorization-consent: true

      client:
        registration:
          google-idp:
            provider: google
            client-id: ${GOOGLE_CLIENT_ID:google-client-id}
            client-secret: ${GOOGLE_CLIENT_SECRET:google-client-secret}
            scope: openid, https://www.googleapis.com/auth/userinfo.profile, https://www.googleapis.com/auth/userinfo.email
            client-name: Sign in with Google
        provider:
          google:
            user-name-attribute: email


logging:
  level:
    org.springframework.security: trace